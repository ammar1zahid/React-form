export default function applyManager(managers, controller) {
  return managers.map(manager => {
    const middleware = manager.getMiddleware();
    // TODO(breaking): remove this once controller prop is no longer supported
    return ({
      dispatch,
      getState
    }) => {
      controller.dispatch = dispatch;
      controller.getState = getState;
      // this is needed for backwards compatibility as we added 'controller' prop previously
      const API = Object.create(controller, {
        controller: {
          value: controller
        }
      });
      // controller is a superset of the middleware API
      return middleware(API);
    };
  });
}

/* These should be compatible with redux */
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHBseU1hbmFnZXIiLCJtYW5hZ2VycyIsImNvbnRyb2xsZXIiLCJtYXAiLCJtYW5hZ2VyIiwibWlkZGxld2FyZSIsImdldE1pZGRsZXdhcmUiLCJkaXNwYXRjaCIsImdldFN0YXRlIiwiQVBJIiwiT2JqZWN0IiwiY3JlYXRlIiwidmFsdWUiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvbWFuYWdlci9hcHBseU1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVyL0NvbnRyb2xsZXIuanMnO1xuaW1wb3J0IHR5cGUgeyBSZWR1Y2VyLCBEaXNwYXRjaCwgUmVkdWNlclN0YXRlIH0gZnJvbSAnLi4vbWlkZGxld2FyZVR5cGVzLmpzJztcbmltcG9ydCB7IE1hbmFnZXIgfSBmcm9tICcuLi90eXBlcy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFwcGx5TWFuYWdlcihcbiAgbWFuYWdlcnM6IE1hbmFnZXJbXSxcbiAgY29udHJvbGxlcjogQ29udHJvbGxlcixcbik6IE1pZGRsZXdhcmVbXSB7XG4gIHJldHVybiBtYW5hZ2Vycy5tYXAobWFuYWdlciA9PiB7XG4gICAgY29uc3QgbWlkZGxld2FyZSA9IG1hbmFnZXIuZ2V0TWlkZGxld2FyZSgpO1xuICAgIC8vIFRPRE8oYnJlYWtpbmcpOiByZW1vdmUgdGhpcyBvbmNlIGNvbnRyb2xsZXIgcHJvcCBpcyBubyBsb25nZXIgc3VwcG9ydGVkXG4gICAgcmV0dXJuICh7IGRpc3BhdGNoLCBnZXRTdGF0ZSB9KSA9PiB7XG4gICAgICAoY29udHJvbGxlciBhcyBhbnkpLmRpc3BhdGNoID0gZGlzcGF0Y2g7XG4gICAgICAoY29udHJvbGxlciBhcyBhbnkpLmdldFN0YXRlID0gZ2V0U3RhdGU7XG4gICAgICAvLyB0aGlzIGlzIG5lZWRlZCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgYXMgd2UgYWRkZWQgJ2NvbnRyb2xsZXInIHByb3AgcHJldmlvdXNseVxuICAgICAgY29uc3QgQVBJID0gT2JqZWN0LmNyZWF0ZShjb250cm9sbGVyLCB7XG4gICAgICAgIGNvbnRyb2xsZXI6IHsgdmFsdWU6IGNvbnRyb2xsZXIgfSxcbiAgICAgIH0pO1xuICAgICAgLy8gY29udHJvbGxlciBpcyBhIHN1cGVyc2V0IG9mIHRoZSBtaWRkbGV3YXJlIEFQSVxuICAgICAgcmV0dXJuIG1pZGRsZXdhcmUoQVBJKTtcbiAgICB9O1xuICB9KTtcbn1cblxuLyogVGhlc2Ugc2hvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCByZWR1eCAqL1xuZXhwb3J0IGludGVyZmFjZSBNaWRkbGV3YXJlQVBJPFxuICBSIGV4dGVuZHMgUmVkdWNlcjxhbnksIGFueT4gPSBSZWR1Y2VyPGFueSwgYW55Pixcbj4ge1xuICBnZXRTdGF0ZTogKCkgPT4gUmVkdWNlclN0YXRlPFI+O1xuICBkaXNwYXRjaDogRGlzcGF0Y2g8Uj47XG59XG5leHBvcnQgdHlwZSBNaWRkbGV3YXJlID0gPFIgZXh0ZW5kcyBSZWR1Y2VyPGFueSwgYW55Pj4oe1xuICBkaXNwYXRjaCxcbn06IE1pZGRsZXdhcmVBUEk8Uj4pID0+IChuZXh0OiBEaXNwYXRjaDxSPikgPT4gRGlzcGF0Y2g8Uj47XG4iXSwibWFwcGluZ3MiOiJBQUlBLGVBQWUsU0FBU0EsWUFBWUEsQ0FDbENDLFFBQW1CLEVBQ25CQyxVQUFzQixFQUNSO0VBQ2QsT0FBT0QsUUFBUSxDQUFDRSxHQUFHLENBQUNDLE9BQU8sSUFBSTtJQUM3QixNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQ0UsYUFBYSxDQUFDLENBQUM7SUFDMUM7SUFDQSxPQUFPLENBQUM7TUFBRUMsUUFBUTtNQUFFQztJQUFTLENBQUMsS0FBSztNQUNoQ04sVUFBVSxDQUFTSyxRQUFRLEdBQUdBLFFBQVE7TUFDdENMLFVBQVUsQ0FBU00sUUFBUSxHQUFHQSxRQUFRO01BQ3ZDO01BQ0EsTUFBTUMsR0FBRyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ1QsVUFBVSxFQUFFO1FBQ3BDQSxVQUFVLEVBQUU7VUFBRVUsS0FBSyxFQUFFVjtRQUFXO01BQ2xDLENBQUMsQ0FBQztNQUNGO01BQ0EsT0FBT0csVUFBVSxDQUFDSSxHQUFHLENBQUM7SUFDeEIsQ0FBQztFQUNILENBQUMsQ0FBQztBQUNKOztBQUVBIn0=