import Controller from '../controller/Controller.js';
import { UnknownError } from '../index.js';
import { ActionTypes, Manager } from '../types.js';
/** Handling network unauthorized indicators like HTTP 401
 *
 * @see https://dataclient.io/docs/api/LogoutManager
 */
export default class LogoutManager implements Manager {
    protected middleware: Middleware;
    constructor({ handleLogout, shouldLogout }?: Props);
    cleanup(): void;
    getMiddleware(): Middleware;
    protected shouldLogout(error: UnknownError): boolean;
    handleLogout(controller: Controller<Dispatch>): void;
}
type Dispatch = (value: ActionTypes) => Promise<void>;
export type Middleware = <C extends Controller<Dispatch>>(controller: C) => (next: C['dispatch']) => C['dispatch'];
type HandleLogout = (controller: Controller<Dispatch>) => void;
interface Props {
    handleLogout?: HandleLogout;
    shouldLogout?: (error: UnknownError) => boolean;
}
export {};
//# sourceMappingURL=LogoutManager.d.ts.map
