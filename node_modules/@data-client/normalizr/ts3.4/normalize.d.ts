import { Schema, NormalizedIndex } from './interface.js';
import { NormalizeNullable, NormalizedSchema } from './types.js';
export declare const normalize: <S extends Schema = Schema, E extends Record<string, Record<string, any> | undefined> = Record<string, Record<string, any>>, R = NormalizeNullable<S>>(input: any, schema?: S | undefined, args?: any[], storeEntities?: Readonly<E>, storeIndexes?: Readonly<NormalizedIndex>, storeEntityMeta?: {
    readonly [entityKey: string]: {
        readonly [pk: string]: {
            readonly date: number;
            readonly expiresAt: number;
            readonly fetchedAt: number;
        };
    };
}, meta?: {
    expiresAt: number;
    date: number;
    fetchedAt: number;
}) => NormalizedSchema<E, R>;
//# sourceMappingURL=normalize.d.ts.map
