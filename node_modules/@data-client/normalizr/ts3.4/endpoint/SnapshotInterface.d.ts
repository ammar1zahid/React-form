import { EndpointInterface } from './EndpointInterface.js';
import { ErrorTypes } from './ErrorTypes.js';
import { ExpiryStatusInterface } from '../Expiry.js';
export interface SnapshotInterface {
    getResponse: <E extends Pick<EndpointInterface, 'key' | 'schema' | 'invalidIfStale'>, Args extends readonly [
        ...Parameters<E['key']>
    ]>(endpoint: E, ...args: Args) => {
        data: any;
        expiryStatus: ExpiryStatusInterface;
        expiresAt: number;
    };
    getError: <E extends Pick<EndpointInterface, 'key'>, Args extends readonly [
        ...Parameters<E['key']>
    ]>(endpoint: E, ...args: Args) => ErrorTypes | undefined;
    readonly fetchedAt: number;
}
//# sourceMappingURL=SnapshotInterface.d.ts.map
